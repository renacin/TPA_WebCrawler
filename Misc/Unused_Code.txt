class data_analysis:


    # [FUNCTION #1] Describe Data
    @staticmethod
    def describe(df):

        # All Items Sold
        items_sold = df["ID"].max()
        print("Total Items Sold: {}".format(items_sold))

        for item_type in df.ITEM_TYPE.unique():

            # Per Item
            it_df = df[df["ITEM_TYPE"] == item_type]
            itc = len(it_df.ID.unique())
            itc_per = round((itc/items_sold)*100, 2)
            print("Total {} Items Sold In Total Test: {} [{}%]".format(item_type, itc, itc_per))

            # Per Item Per Month
            for month_ in it_df.LIST_MONTH.unique():
                it_m_df = it_df[it_df["LIST_MONTH"] == month_]
                it_m_c = len(it_m_df.ID.unique())
                it_m_c_per = round((it_m_c/itc)*100, 2)
                print("Total {} Items Sold In {}: {} [{}%]".format(item_type, month_, it_m_c, it_m_c_per))


    # [FUNCTION #X] Visualize Data By Scatter Plot
    @staticmethod
    def scatter_by_sku(df):
        unique_sku = set(df["SKU"].tolist())
        for sku in unique_sku:
            extract_df = df[df["SKU"] == sku]

            name_list = extract_df["ITEM_NAME"].tolist()
            item_name = str(name_list[0])

            plt.scatter(extract_df.MINUTES_SINCE, extract_df.CUR_PRICE)
            plt.title(item_name)
            plt.xlabel("Minutes Since")
            plt.ylabel("Current Price")
            plt.show()

            plt.close()


Notes:
    + https://stat.utexas.edu/images/SSC/Site/documents/SPSS_DescriptiveStats.pdf




    # # Data Prep
    # df = prep_data.data_from_db("Data/")
    # df = prep_data.clean_columns(df)
    # df = prep_data.remove_redun(df)
    #
    #
    # # Create Deep Copy & Write To CSV
    # cleaned_df = df.copy()
    # cleaned_df.to_csv("CleanedData.csv", index=False)
    # del df, cleaned_df
    # # Descriptive Statistics For Ratio Data | Using Final Data
    # for col_name in ["CUR_PRICE", "NUM_BIDS"]:
    #     descriptive.histogram(df_last_bid[col_name])
    #
    #
    # # Descriptive Statistics For Nominal Data | Using Final Data
    # for col_name in ["HIGHEST_BIDR"]:
    #     descriptive.freqtable(df_last_bid[col_name])


    # df_data = df_data[df_data["ITEM_TYPE"] == "Technology"]

    # # Descriptive Statistics For Ratio Data | Using Final Data
    # for col_name in ["CUR_PRICE", "NUM_BIDS", "DESIRABILITY"]:
    #     descriptive.histogram(df_data[col_name])
    #
    # # Descriptive Statistics For Nominal Data | Using Final Data
    # for col_name in ["HIGHEST_BIDR"]:
    #     descriptive.freqtable(df_data[col_name])











                # Loop Through Elements In ID List
                temp_price_list = master_nan.copy()
                for idx, x in enumerate(item_minutes_observed):

                    temp_price_list[x] = item_price_observed[idx]

                # Add To Data Dump Via Name
                data_dump[item_name] = temp_price_list

            # df = pd.DataFrame.from_dict(data_dump)
            # df.to_csv("Data/DataDump.csv", index=False)
