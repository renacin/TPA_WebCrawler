class data_analysis:


    # [FUNCTION #1] Describe Data
    @staticmethod
    def describe(df):

        # All Items Sold
        items_sold = df["ID"].max()
        print("Total Items Sold: {}".format(items_sold))

        for item_type in df.ITEM_TYPE.unique():

            # Per Item
            it_df = df[df["ITEM_TYPE"] == item_type]
            itc = len(it_df.ID.unique())
            itc_per = round((itc/items_sold)*100, 2)
            print("Total {} Items Sold In Total Test: {} [{}%]".format(item_type, itc, itc_per))

            # Per Item Per Month
            for month_ in it_df.LIST_MONTH.unique():
                it_m_df = it_df[it_df["LIST_MONTH"] == month_]
                it_m_c = len(it_m_df.ID.unique())
                it_m_c_per = round((it_m_c/itc)*100, 2)
                print("Total {} Items Sold In {}: {} [{}%]".format(item_type, month_, it_m_c, it_m_c_per))


    # [FUNCTION #X] Visualize Data By Scatter Plot
    @staticmethod
    def scatter_by_sku(df):
        unique_sku = set(df["SKU"].tolist())
        for sku in unique_sku:
            extract_df = df[df["SKU"] == sku]

            name_list = extract_df["ITEM_NAME"].tolist()
            item_name = str(name_list[0])

            plt.scatter(extract_df.MINUTES_SINCE, extract_df.CUR_PRICE)
            plt.title(item_name)
            plt.xlabel("Minutes Since")
            plt.ylabel("Current Price")
            plt.show()

            plt.close()
